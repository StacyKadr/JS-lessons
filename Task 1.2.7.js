 /* 1. Объяснить, почему код ниже даёт именно такие результаты?

var a = 1, b = 1, c, d;
c = ++a; alert(c); // 2 в данном случае оператор инкремент увеличивает операнд на установленный фиксированный шаг 1, затем присваивает переменной с увеличенное значение а
d = b++; alert(d); // 1 в данном случае сначала переменной d присваивается значение b, а потом оператор инкремент увеличивает операнд b на установленный фиксированный шаг 1
c = (2+ ++a); alert(c); // 5 в данном случае оператор инкремент увеличивает операнд a на установленный фиксированный шаг 1 (ранее a уже увеличили на 1), а потом переменной c присваивается значение 2+3
d = (2+ b++); alert(d); // 4 в данном случае сначала переменной d присваивается значение 2+b (ранее b уже увеличили на 1), а потом оператор инкремент увеличивает операнд b на установленный фиксированный шаг 1
alert(a); // 3 переменная a была увеличена три раза
alert(b); // 3 переменная b была увеличена три раза
*/

/* 2. Объяснить, чему будет равен x в примере ниже? 

var a = 2;
var x = 1 + (a *= 2); 
alert (x); 5 после присвоения переменной а - 2, присваиваем х значение 2 * 2 + 1, что равно 5
*/

/* 7. (*) Сравнить null и 0 и своими словами объяснить результат.
a = null;
b = 0;
alert (a == b); false т.к. null и 0 - разные типы данных, то оператор `==` возращает false

