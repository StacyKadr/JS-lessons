/* 1. Задать температуру в градусах по Цельсию, используя prompt и вывести через alert соответствующую температуру в градусах по Фаренгейту.
Подсказка: расчет идет по формуле Tf = (9 / 5) * Tc + 32, где Tf — температура по Фаренгейту, Tc — по Цельсию. */

var Tc = prompt("Введите температуру в градусах по Цельсию:")
var Tf = (9 / 5) * Tc + 32;
alert(Tf);


/* 2. Объявить две переменные: admin и name, записать в name строку «Василий». Скопировать значение из name в admin и вывести admin.
Подсказка: должно вывестись «Василий». */

var admin;
var name = "Василий";
admin = name;
alert("Задание 2: Имя admin: " + admin);


/* 3. (*) Чему будет равно выражение 1000 + "108" в JavaScript? Объяснить, почему именно такой ответ.*/

var value = 1000;
var textValue = "108";
var result = value + textValue;
alert("Задание 3: Результат равен: " + result);
/* Чаще всего операторы и функции автоматически приводят переданные им значения к нужному типу.Например, alert автоматически преобразует любое значение к строке. Поэтому получается строка 1000 + строка 108 в результате дают 1000108


/* Async используется, чтобы указать браузеру, что скрипт может быть выполнен асинхронно.
Парсеру HTML нет необходимости останавливаться, когда он достигает тега <script> для загрузки и выполнения скрипта. 
Выполнение может произойти после того, как скрипт будет получен параллельно с разбором документа. Записывается вот так 
<script async src="script.js"> 
Атрибут defer указывает браузеру, что скрипт должен быть выполнен после того, как HTML-документ будет полностью разобран. 
Как и при асинхронной загрузке скриптов — файл может быть загружен, в то время как HTML-документ парсится. 
Однако, даже если файл скрипта будет полностью загружен ещё до того, как парсер закончит работу, он не будет выполнен до тех пор, 
пока парсер не отработает до конца. Записывается вот так <script defer src="script.js">
Есть 2 раздичия: 1 - браузер гарантирует, что относительный порядок скриптов с defer будет сохранён, 
т.е. скрипты выполняются по очереди, тогда как в таком коде (с async) первым сработает тот скрипт, который раньше загрузится. 
Второе отличие – скрипт с defer сработает, когда весь HTML-документ будет обработан браузером. */

